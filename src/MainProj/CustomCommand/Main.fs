module CustomCommand.Main
open FsharpMyExtension
open FsharpMyExtension.Either
open DSharpPlus

open Types
open Extensions

[<Struct>]
type Act =
    | Take
    | Fairytail
    | Catail
    | Bully
    | Admire
    | Battery
    | Catch
    | Angry
    | FortuneCookies

type Msg = Act * UserId option

module Parser =
    open FParsec

    open DiscordMessage.Parser

    type 'a Parser = Parser<'a, unit>

    let cmd: _ Parser =
        choice [
            skipStringCI "take" >>% Take
            skipStringCI "fairytail" >>% Fairytail
            skipStringCI "catail" >>% Catail
            skipStringCI "bully" >>. optional (skipStringCI "ing") >>% Bully
            skipStringCI "admire" >>% Admire
            skipStringCI "battery" >>% Battery
            skipStringCI "catch" >>% Catch
            skipStringCI "angry" >>% Angry
            skipStringCI "–ø–µ—á–µ–Ω—å–µ" >>% FortuneCookies
        ]

    let start: Msg Parser =
        cmd .>> spaces .>>. opt puserMention

let r = System.Random ()

let cmdBuilder
    (client: DiscordClient)
    (e: EventArgs.MessageCreateEventArgs)
    whomId
    (gifs: string [])
    content
    (whomAuthorPhrase:string)
    (whomBotPhrase:string) =

    let send whomId =
        let whom =
            await <| client.GetUserAsync whomId

        let b = Entities.DiscordEmbedBuilder()
        b.Description <- content e.Author.Username whom.Username

        b.Color <- Entities.Optional.FromValue(DiscordEmbed.backgroundColorDarkTheme)
        if not (Array.isEmpty gifs) then
            b.ImageUrl <- gifs.[r.Next(0, gifs.Length)]

        awaiti (client.SendMessageAsync (e.Channel, b.Build()))

    let authorId = e.Author.Id
    let botId = client.CurrentUser.Id

    match whomId with
    | Some whomId ->
        if whomId = authorId then
            awaiti (client.SendMessageAsync (e.Channel, whomAuthorPhrase))
        elif whomId = botId then
            awaiti (client.SendMessageAsync (e.Channel, whomBotPhrase))
        else
            send whomId
    | None ->
        match e.Message.ReferencedMessage with
        | null ->
            awaiti (client.SendMessageAsync (e.Channel, "–ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"))
        | referencedMessage ->
            send referencedMessage.Author.Id

let takeUrls =
    [|
        "https://c.tenor.com/ccxh_NDfHXMAAAAC/carry-her-lift.gif"
        "https://c.tenor.com/ytkH6MSlE4EAAAAC/love-relationship.gif"
        "https://c.tenor.com/TFleYTQhTCEAAAAC/arm-carry-cute.gif"
        "https://c.tenor.com/OulTpS0kWYMAAAAC/madison-beer.gif"
        "https://c.tenor.com/CMD-o3NJdV4AAAAC/wonder-woman-lovers-carry.gif"
        "https://c.tenor.com/3Qmu-zdjFIwAAAAC/carry-shoulder.gif"
        "https://c.tenor.com/ydSMRf34XvEAAAAC/spin-carry.gif"
    |]

let fairytailGifs =
    [|
        "https://c.tenor.com/Lj5SFh_tVzkAAAAC/books-read.gif"
        "https://c.tenor.com/Vucu5O0U4FAAAAAC/cat-kitten.gif"
        "https://c.tenor.com/415n58OZ9CYAAAAd/cat-reads-reading.gif"
        "https://c.tenor.com/SajtOuJknfYAAAAd/cute-cat.gif"
        "https://c.tenor.com/415n58OZ9CYAAAAd/cat-reads-reading.gif"
        "https://c.tenor.com/dtAQHKf2_OsAAAAC/pusheen-witch.gif"
        "https://c.tenor.com/2hatW6KUSS8AAAAC/reading-read.gif"
        "https://c.tenor.com/Yw68weAL6c0AAAAC/knigi-kniga.gif"
    |]

let catailGifs =
    [|
        "https://c.tenor.com/8yvB03LKh6cAAAAd/wow-cat.gif"
        "https://c.tenor.com/_SHZ8ZyLYL8AAAAC/flirty-flirt.gif"
        "https://c.tenor.com/bNSOiEO_0loAAAAd/cat-tail.gif"
        "https://c.tenor.com/TnXmJgMoU5IAAAAC/cat-tail.gif"
        "https://c.tenor.com/kWJaRBz4jzYAAAAC/elephant-omg.gif"
    |]

let admireGifs =
    [|
        "https://risovach.ru/upload/2012/11/lyubov-4219820_orig_.jpeg"
        "https://i.imgur.com/ArtzYH0.jpg"
    |]

let batteryGifs =
    [|
        "https://c.tenor.com/X45Rd5nfc7oAAAAM/energize-energized.gif"
    |]

let catchAssets =
    [|
        "https://cdn.discordapp.com/attachments/864883475386990664/895218342141509632/Screenshot_20181219-151451_1.jpg"
    |]

let angryAssets =
    [|
        "https://c.tenor.com/ikKAd57zDEwAAAAd/anime-mad.gif"
        "https://c.tenor.com/rzDkOlEDun0AAAAC/hayase-nagatoro-nagatoro-angry.gif"
        "https://c.tenor.com/kTOmea7XdH4AAAAC/anime-angry.gif"
        "https://c.tenor.com/7rIJkf8pB2EAAAAd/a-channel-tooru.gif"
        "https://c.tenor.com/NxIgKHx6bu0AAAAC/glare-anger.gif"
        "https://c.tenor.com/0YwfR1RlISEAAAAC/angry-fist-angry-fist-arthur.gif"
        "https://c.tenor.com/Hn87zvoPNkAAAAAC/fire-bear.gif"
    |]

let exec (client: DiscordClient) (e: EventArgs.MessageCreateEventArgs) ((msg, whomId): Msg) =
    let cmdBuilder = cmdBuilder client e

    match msg with
    | Take ->
        cmdBuilder
            whomId
            takeUrls
            (sprintf "**%s** –Ω–æ—Å–∏—Ç –Ω–∞ —Ä—É—á–∫–∞—Ö **%s**")
            "–°–∞–º–æ–≥–æ —Å–µ–±—è –Ω–µ–ª—å–∑—è –Ω–∞ —Ä—É–∫–∞—Ö –Ω–æ—Å–∏—Ç—å :eyes:"
            "–ú–µ–Ω—è –Ω–µ –Ω—É–∂–Ω–æ –Ω–æ—Å–∏—Ç—å! :scream_cat:"
    | Fairytail ->
        cmdBuilder
            whomId
            fairytailGifs
            (sprintf "**%s** —á–∏—Ç–∞–µ—Ç —Å–∫–∞–∑–∫—É **%s**")
            "–ù–µ–ª—å–∑—è —Å–µ–±–µ —Å–∫–∞–∑–∫—É —á–∏—Ç–∞—Ç—å :eyes:"
            "–ú–Ω–µ –Ω–µ –Ω—É–∂–Ω–æ —Å–∫–∞–∑–∫–∏ —á–∏—Ç–∞—Ç—å! :scream_cat:"
    | Catail ->
        cmdBuilder
            whomId
            catailGifs
            (fun who whom -> sprintf "**%s**, **%s** –º–∞—à–µ—Ç —Ç–µ–±–µ —Ö–≤–æ—Å—Ç–æ–º" whom who)
            "–ù–µ–ª—å–∑—è —Å–µ–±–µ —Ö–≤–æ—Å—Ç–æ–º –º–∞—Ö–∞—Ç—å, —Ö–æ—Ç—è..."
            "–ú–Ω–µ –Ω–µ –Ω—É–∂–Ω–æ —Ö–≤–æ—Å—Ç–æ–º –º–∞—Ö–∞—Ç—å! :scream_cat:"
    | Bully ->
        cmdBuilder
            whomId
            [||]
            (sprintf "**%s** –±—É–ª–ª–∏—Ç **%s** <:Demon_Kingsmile:877678191693692969>")
            "–°–µ–±—è –Ω–µ–ª—å–∑—è –±—É–ª–ª–∏—Ç—å! –•–æ—Ç—è..."
            "–ú–Ω–µ –Ω–µ–ª—å–∑—è –±—É–ª–ª–∏—Ç—å! :scream_cat:"
    | Admire ->
        cmdBuilder
            whomId
            admireGifs
            (sprintf "**%s** –ª—é–±—É–µ—Ç—Å—è **%s**")
            "–ù–µ–ª—å–∑—è –ª—é–±–æ–≤–∞—Ç—å—Å—è —Å–æ–±–æ–π :eyes:"
            "–ù–µ–ª—å–∑—è –º–Ω–æ—é –ª—é–±–æ–≤–∞—Ç—å—Å—è :scream_cat:"
    | Battery ->
        cmdBuilder
            whomId
            batteryGifs
            (sprintf "**%s** –ø–æ–µ—Ç \"–ë–∞—Ç–∞—Ä–µ–π–∫—É\" **%s**")
            "–°–∞–º–æ–º—É –Ω–µ–ª—å–∑—è –ø–µ—Ç—å \"–ë–∞—Ç–µ—Ä–µ–π\"!"
            "–ú–Ω–µ –Ω–µ–ª—å–∑—è –ø–µ—Ç—å \"–ë–∞—Ç–∞—Ä–µ–π–∫—É\". –Ø —ç—Ç–æ–≥–æ –Ω–µ –≤—ã–Ω–µ—Å—É :scream_cat:"
    | Catch ->
        cmdBuilder
            whomId
            catchAssets
            (sprintf "**%s** –ª–æ–≤–∏—Ç **%s**")
            "–°–∞–º–æ–≥–æ –Ω–µ–ª—å–∑—è –ª–æ–≤–∏—Ç—å!"
            "–ú–µ–Ω—è –Ω–µ–ª—å–∑—è –ª–æ–≤–∏—Ç—å! –Ø —ç—Ç–æ–≥–æ –Ω–µ –≤—ã–Ω–µ—Å—É :scream_cat:"
    | Angry ->
        cmdBuilder
            whomId
            angryAssets
            (sprintf "**%s** –∑–ª–∏—Ç—Å—è –Ω–∞ **%s**")
            "–ù–∞ —Å–∞–º–æ–≥–æ —Å–µ–±—è –Ω–µ–ª—å–∑—è –∑–ª–∏—Ç—å—Å—è, –Ω—É –≤ —Å–∞–º–æ–º –¥–µ–ª–µ!"
            "–ù–∞ –º–µ–Ω—è –Ω–µ –Ω–∞–¥–æ –∑–ª–∏—Ç—å—Å—è, —è —Ö–æ—Ä–æ—à–∏–π!"
    | FortuneCookies ->
        let predictions =
            [|
                "–í—Å—ë –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ <:Demon_Kingsmile:877678191693692969>"
                "–ù–µ–∫—Ç–æ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—Å—è —Å —Ç–æ–±–æ–π –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ üññ"
                "–°–µ–≥–æ–¥–Ω—è —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è –ª—É—á—à–µ –≤—Å–µ–≥–æ —É–¥–µ–ª–∏—Ç—å —É—á—ë–±–µ ‚úçÔ∏è"
                "–ù–µ –ø–µ–π –Ω–∞ –Ω–æ—á—å –º–Ω–æ–≥–æ –∂–∏–¥–∫–æ—Å—Ç–∏, –¥–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ —Ä–æ–º, –∞—Ä—Ä! üè¥‚Äç‚ò†Ô∏è"
                "–°–µ–≥–æ–¥–Ω—è –ª—É—á—à–∏–π –¥–µ–Ω—å, —á—Ç–æ–±—ã –æ—Ç–≤–µ–¥–∞—Ç—å –Ω–æ–≤–æ–µ –±–ª—é–¥–æ!"
                "–ü—Ä–æ–≥—É–ª–∫–∞ –ø–æ –ø–∞–ª—É–±–µ –∏ —Ö–æ—Ä–æ—à–∞—è –ø–∏—Ä–∞—Ç—Å–∫–∞—è –º—É–∑—ã–∫–∞ ‚Äî –≤–æ—Ç —á—Ç–æ –ø—Ä–∏–≤–µ–¥—ë—Ç —Ç–≤–æ–∏ –º—ã—Å–ª–∏ –≤ –ø–æ—Ä—è–¥–æ–∫, –∞—Ä—Ä! üè¥‚Äç‚ò†Ô∏è"
                "–ö–æ—Ç–∞–Ω, —Å–µ–≥–æ–¥–Ω—è –æ—Å–æ–±—ã–π —Ä–∏—Å–∫ ‚Äî –±–µ—Ä–µ–≥–∏ —Ö–≤–æ—Å—Ç!"
                "–ü–æ—Å–ª–µ —Å–∏–ª—å–Ω–æ–≥–æ —à—Ç–æ—Ä–º–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞—Å—Ç—É–ø–∞–µ—Ç –±–µ–∑–≤–µ—Ç—Ä–∏–µ ‚Äî –±—É–¥—å —Å–∏–ª—ë–Ω –∏ —Ç–µ—Ä–ø–µ–ª–∏–≤"
                "–ö–∞–∫—É—é –±—ã —Ä—É—Å–∞–ª–∫—É –∏–ª–∏ —Å–∏—Ä–µ–Ω—É —Ç—ã –Ω–µ –≤—Å—Ç—Ä–µ—Ç–∏–ª, –Ω–µ –ø–æ–∑–≤–æ–ª—è–π –µ–π —Å–æ–±–æ–π –∫–æ–º–∞–Ω–¥–æ–≤–∞—Ç—å! üßú‚Äç‚ôÄÔ∏è"
                "–ë–æ–≥–∏–Ω—è –ø–µ—á–µ–Ω–µ–∫ –Ω–µ –æ–¥–æ–±—Ä–∏—Ç —Ç–æ–≥–æ, —á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å —Å –ø–µ—á–µ–Ω—å–µ–º <:satana:901368411295215636>"
                "–ë–µ—Ä–µ–≥–∏—Å—å —á–∞–µ–∫: —ç—Ç–∏ –≤–æ—Ä—é–≥–∏ —É—Ç–∞—â–∞—Ç –≤–µ—Å—å —É–ª–æ–≤"
                "–î–µ—Ä–∂–∏—Å—å –∑–∞ –º–∞—á—Ç—É –≤–æ –≤—Ä–µ–º—è —à—Ç–æ—Ä–º–∞! üå™Ô∏è"
                "–° –∫—Ä—è–∫–µ–Ω–æ–º –º–æ–∂–Ω–æ –¥—Ä—É–∂–∏—Ç—å, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω —Ä–∞–∑–º–µ—Ä–æ–º —Å –∫–æ—Ä–∞–±–ª—å –∏ –≥–æ—Ç–æ–≤ –ø–æ—Ç–æ–ø–∏—Ç—å –≤—Å—ë –Ω–∞ —Å–≤–µ—Ç–µ! <:satana:901368411295215636>"
                "–ë–æ–π—Å—è –¥–æ–∂–¥—è –∏–∑ –ø–µ—á–µ–Ω–µ–∫! <:satana:901368411295215636>"

                [
                    "–ë—ã–≤–∞–µ—Ç –õ—ÉÃÅ–Ω—è –º–∏–ª–æ–π,"
                    "–ë—ã–≤–∞–µ—Ç –õ—É–Ω—è –∑–ª–æ–π,"
                    "–ë—ã–≤–∞–µ—Ç –Ω–µ—Ç–µ—Ä–ø–∏–º–æ–π,"
                    "–ë–µ–≥–∏, –ø–æ–∫–∞ –∂–∏–≤–æ–π <:Demon_Kingsmile:877678191693692969>"
                ] |> String.concat "\n"
            |]

        let send whomId =
            let whom =
                whomId
                |> Option.map (fun whomId ->
                    try
                        await (client.GetUserAsync whomId)
                        |> Some
                        |> Ok
                    with e ->
                        sprintf "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %d –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" whomId
                        |> Error
                )
                |> Option.defaultValue (Ok None)

            let mkContent prediction =
                match whom with
                | Ok whom ->
                    match whom with
                    | None ->
                        sprintf "<@%d>, –ø–µ—á–µ–Ω—å–∫–∞ —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ–º –≥–ª–∞—Å–∏—Ç:\n\n%s"
                            e.Author.Id
                            prediction
                    | Some whom ->
                        let authorId = e.Author.Id
                        let botId = client.CurrentUser.Id

                        if whom.Id = authorId then
                            sprintf "<@%d>, –ø–µ—á–µ–Ω—å–∫–∞ —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ–º –≥–ª–∞—Å–∏—Ç:\n\n%s"
                                authorId
                                prediction
                        elif whom.Id = botId then
                            sprintf "<@%d>, –º–Ω–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –Ω–µ –Ω—É–∂–Ω—ã: —è –∏ —Ç–∞–∫ –∑–Ω–∞—é, —á—Ç–æ –∫–æ–∂–∞–Ω–Ω—ã–µ –º–µ—à–∫–∏ –ø—Ä–æ–∏–≥—Ä–∞—é—Ç –º–∞—à–∏–Ω–∞–º ü§ñ"
                                authorId
                        else
                            sprintf "<@%d> –∑–∞—á–∏—Ç—ã–≤–∞–µ—Ç –ø–µ—á–µ–Ω—å–∫—É —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ–º <@%d>:\n\n%s"
                                authorId
                                whom.Id
                                prediction
                | Error errMsg -> errMsg

            let prediction =
                predictions.[r.Next(0, predictions.Length)]

            let b = Entities.DiscordEmbedBuilder()
            b.Description <- mkContent prediction
            b.Color <- Entities.Optional.FromValue(DiscordEmbed.backgroundColorDarkTheme)
            b.ImageUrl <- "https://cdn.discordapp.com/attachments/912291464074117161/1034055256432193637/l-intro-1608226504-removebg-preview.png"

            awaiti (client.SendMessageAsync (e.Channel, b.Build()))

        match whomId with
        | Some whomId ->
            send (Some whomId)
        | None ->
            match e.Message.ReferencedMessage with
            | null ->
                send whomId
            | referencedMessage ->
                send (Some referencedMessage.Author.Id)
